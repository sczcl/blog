<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>长安的博客</title>
    <description>小小Python学者，不定时发布一些学习记录</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 17 Aug 2018 15:46:56 +0800</pubDate>
    <lastBuildDate>Fri, 17 Aug 2018 15:46:56 +0800</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>jekyll发布notebook编写的笔记</title>
        <description>&lt;div
  class=&quot;jupyter-notebook&quot;
  style=&quot;position: relative; width: 100%; margin: 0 auto;&quot;&gt;
  &lt;div class=&quot;jupyter-notebook-iframe-container&quot;&gt;
    &lt;iframe
      src=&quot;/notebooks/ipython.ipynb.html&quot;
      style=&quot;position: absolute; top: 0; left: 0; border-style: none;&quot;
      width=&quot;100%&quot;
      height=&quot;100%&quot;
      onload=&quot;this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 17 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/17/ipython.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/17/ipython.html</guid>
        
        <category>notebook</category>
        
        <category>ipython</category>
        
        <category>jekyll</category>
        
        <category>python</category>
        
        
        <category>技术</category>
        
      </item>
    
      <item>
        <title>搭建jekyll博客</title>
        <description>&lt;div
  class=&quot;jupyter-notebook&quot;
  style=&quot;position: relative; width: 100%; margin: 0 auto;&quot;&gt;
  &lt;div class=&quot;jupyter-notebook-iframe-container&quot;&gt;
    &lt;iframe
      src=&quot;/notebooks/August/SetUpBlog.ipynb.html&quot;
      style=&quot;position: absolute; top: 0; left: 0; border-style: none;&quot;
      width=&quot;100%&quot;
      height=&quot;100%&quot;
      onload=&quot;this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 17 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/17/SetUpJekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/17/SetUpJekyll.html</guid>
        
        <category>jekyll</category>
        
        <category>blog</category>
        
        
        <category>技术</category>
        
      </item>
    
      <item>
        <title>git用法</title>
        <description>&lt;h3 id=&quot;代码高亮&quot;&gt;代码高亮&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@requires_authorization&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;todolist&quot;&gt;todolist&lt;/h3&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;已完成
    &lt;ul class=&quot;task-list&quot;&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;已完成2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;代办&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git简介和安装&quot;&gt;git简介和安装&lt;/h2&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装，&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;下载地址&lt;/a&gt;&lt;br /&gt;
下载后默认安装就行，菜单中，Git Bash&lt;br /&gt;
然后配置账户名和密码，具体百度&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Your Name&quot;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email@example.com&quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;创建版本库&quot;&gt;创建版本库&lt;/h3&gt;
&lt;p&gt;第一步使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt;命令，添加文件到仓库可以分两步：&lt;br /&gt;
-第一步使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt;添加 
-第二步使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;说明&quot;&lt;/code&gt;完成&lt;/p&gt;
&lt;h2 id=&quot;时光穿梭机&quot;&gt;时光穿梭机&lt;/h2&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;查看状态情况 &lt;br /&gt;
使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt;查看不同&lt;/p&gt;
&lt;h3 id=&quot;版本回退&quot;&gt;版本回退&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;查看日志，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --pretty=oneline&lt;/code&gt;让它变成一行 &lt;br /&gt;
版本表示&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^&lt;/code&gt;表示上一个版本，&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD~x&lt;/code&gt;表示x前的版本 &lt;br /&gt;
退回上一个版本使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD^&lt;/code&gt;退回上个版本也可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard xxxx&lt;/code&gt;退回到xxx版本指定版本号的版本 &lt;br /&gt;
通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git reflog&lt;/code&gt;查看自己的所有命令&lt;/p&gt;
&lt;h3 id=&quot;工作区和缓存区&quot;&gt;工作区和缓存区&lt;/h3&gt;
&lt;h4 id=&quot;工作区就是目前工作目录如我的d&quot;&gt;工作区就是目前工作目录，如我的D:/&lt;/h4&gt;
&lt;h4 id=&quot;版本库就是git版本库其中存了stage的暂存区以及第一个分支master以及指向它的head图&quot;&gt;版本库就是.git版本库，其中存了stage的暂存区，以及第一个分支master以及指向它的HEAD图&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.liaoxuefeng.com/cdn/files/attachments/001384907702917346729e9afbf4127b6dfbae9207af016000/0&quot; alt=&quot;&quot; /&gt;
其实git status查看的是暂存区的文件信息&lt;br /&gt;
&lt;img src=&quot;https://cdn.liaoxuefeng.com/cdn/files/attachments/001384907720458e56751df1c474485b697575073c40ae9000/0&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;管理修改&quot;&gt;管理修改&lt;/h3&gt;
&lt;p&gt;git优秀地方在于它管理的是修改，不是文件&lt;/p&gt;
&lt;h3 id=&quot;撤销修改&quot;&gt;撤销修改&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -- file&lt;/code&gt;来丢弃工作区的修改&lt;br /&gt;
使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset HEAD file&lt;/code&gt;丢弃暂存区的内容&lt;/p&gt;
&lt;h3 id=&quot;删除文件&quot;&gt;删除文件&lt;/h3&gt;
&lt;h2 id=&quot;远程仓库&quot;&gt;远程仓库&lt;/h2&gt;
&lt;p&gt;所以过程是：
-mkdir test
-cd test
-git init()
-远程创建test
-git remote add origin git@github.com:sczcl/mytest.git
-git push -u origin master如果远程有文件，得先git pull –rebase origin master下载
如果推不上去，则表示本地仓库为空，需要添加文件后再推送。
使用
&lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt;
可以添加全部文件
使用&lt;code class=&quot;highlighter-rouge&quot;&gt; git remote add origin git@github.com:sczcl/mytest.git&lt;/code&gt;添加远程仓库，其中origin是远程仓库，miche是用户名，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt;把本地库的所有放到远程上&lt;/p&gt;
&lt;h3 id=&quot;克隆&quot;&gt;克隆&lt;/h3&gt;
&lt;p&gt;创建一个项目，然后&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone git@github.com:michaelliao/gitskills.git&lt;/code&gt; 取下来&lt;/p&gt;
&lt;h2 id=&quot;分支管理&quot;&gt;分支管理&lt;/h2&gt;
&lt;h3 id=&quot;创建和合并分支&quot;&gt;创建和合并分支&lt;/h3&gt;
&lt;p&gt;git中版本控制分支是master分支
&lt;img src=&quot;https://cdn.liaoxuefeng.com/cdn/files/attachments/0013849087937492135fbf4bbd24dfcbc18349a8a59d36d000/0&quot; alt=&quot;&quot; /&gt;
用&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b dev&lt;/code&gt;创建并切换到dev分支
使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch&lt;/code&gt;查看分支
合并&lt;code class=&quot;highlighter-rouge&quot;&gt;git merge dev&lt;/code&gt;然后就能使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -d dev&lt;/code&gt;删除dev分支
当master和分支都有新信息之后，不能快速合并。使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;查看冲突。在«««&amp;lt;和======之间是当前分支，======和»»»之间是有问题分支，修改之后就行
使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --graph --pretty=oneline --abbrev-commit&lt;/code&gt;查看提交&lt;/p&gt;
&lt;h3 id=&quot;分支管理策略&quot;&gt;分支管理策略&lt;/h3&gt;
&lt;p&gt;合并分支Git可以的话会默认用Fast forward模式，这种模式下删除分支会丢弃分支信息。强制禁用这个模式的时候，Git会在merge的时候产生一个新的commit，我们可以用–no-ff的方式git merge，首先&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b dev&lt;/code&gt;然后修改提交，然后&lt;code class=&quot;highlighter-rouge&quot;&gt;git merge --no-ff -m &quot;merge with no-ff&quot; dev&lt;/code&gt;合并&lt;/p&gt;
&lt;h3 id=&quot;bug分支&quot;&gt;bug分支&lt;/h3&gt;
&lt;p&gt;在当前分支工作的时候发现还有bug不能提交，就是在主线上有问题，但是我们是在分支线上开发的，所以需要调整。这时候所以使用Git的stash功能将当前工作存储起来，等恢复以后继续。&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash&lt;/code&gt;
修复完成以后使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash list&lt;/code&gt;查看存储的列表，使用两种方法恢复：
	-第一种，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash apply&lt;/code&gt;这时候完成了stash内容不删除，需要手动&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash drop&lt;/code&gt;
	-第二种，用&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash pop&lt;/code&gt;这时候自动删除了&lt;/p&gt;
&lt;h3 id=&quot;feature分支&quot;&gt;Feature分支&lt;/h3&gt;
&lt;p&gt;为了防止出错，先建立一个Feature分支，在上面开发后合并，最后删除分支。列入开发Vulcan的新功能&lt;/p&gt;
&lt;h3 id=&quot;多人协作&quot;&gt;多人协作&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin 分支&lt;/code&gt;推送到远程，&lt;/p&gt;
&lt;h2 id=&quot;标签管理&quot;&gt;标签管理&lt;/h2&gt;
&lt;p&gt;就是对版本库打标签，确定版本&lt;/p&gt;
&lt;h3 id=&quot;创建标签&quot;&gt;创建标签&lt;/h3&gt;
&lt;p&gt;首先切换到打标签的分支上，然后&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag name&lt;/code&gt;就可以打标签了，可以对指定id的打标签，&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag name id&lt;/code&gt;，或者&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -a name -m remark id&lt;/code&gt;打标签，&lt;code class=&quot;highlighter-rouge&quot;&gt;git show name&lt;/code&gt;看看到说明，看通过&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -s v&lt;/code&gt;用私钥名一个标签&lt;/p&gt;
&lt;h3 id=&quot;操作标签&quot;&gt;操作标签&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -d name&lt;/code&gt;可以删除&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Aug 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/08/15/The-Starting-of-Git.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/15/The-Starting-of-Git.html</guid>
        
        <category>jekyll</category>
        
        <category>前端开发</category>
        
        <category>设计</category>
        
        
        <category>技术</category>
        
      </item>
    
  </channel>
</rss>
